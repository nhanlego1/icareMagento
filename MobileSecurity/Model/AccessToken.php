<?php
/**
 * Copyright Â© 2016 by Mobivi.
 * Created by Long Nguyen.
 * User: longnguyen
 * Date: 14/10/2016
 * Time: 11:21
 */
namespace Icare\MobileSecurity\Model;
use Zend\Form\Element\DateTime;

class AccessToken extends \Magento\Framework\Model\AbstractModel implements AccessTokenInterface, \Magento\Framework\DataObject\IdentityInterface
{
    const CACHE_TAG = 'icare_access_token';
    const VAR_HASH_SALT_KEY = 'icare_access_token';
    const DEFAULT_MEMBER_HASH_SALT = 'ldz0iO1wx';
    protected function _construct()
    {
        $this->_init('Icare\MobileSecurity\Model\ResourceModel\AccessToken');
    }

    public function getIdentities()
    {
        return [self::CACHE_TAG . '_' . $this->getId()];
    }

    /**
     * Get customer ID
     * getCustomerId
     * @return integer
     */
    public function getCustomerId() {
        return $this->getData('customer_id');
    }

    /**
     * setCustomerId
     * @param integer $customer_id
     * @return mixed
     */
    public function setCustomerId($customer_id) {
        // TODO: Implement setCustomerId() method.
        return $this->setData('customer_id',$customer_id);
    }

    /**
     * getDeviceId
     * @return string
     */
    public function getDeviceId() {
        // TODO: Implement getDeviceId() method.
        return $this->getData('device_id');
    }

    /**
     * setDeviceId
     * @param string $device_id
     * @return mixed
     */
    public function setDeviceId($device_id) {
        // TODO: Implement setDeviceId() method.
        return $this->setData('device_id',$device_id);
    }

    /**
     * getPinCode
     * @return string
     */
    public function getAccessToken() {
        // TODO: Implement getPinCode() method.
        return $this->getData('access_token');
    }

    /**
     * setPinCode
     * @param string $pincode
     * @return mixed
     */
    public function setAccessToken($access_token) {
        // TODO: Implement setPinCode() method.
        return $this->setData('access_token',$access_token);
    }

    /**
     * getStatus
     * @return integer
     */
    public function getIsLock() {
        // TODO: Implement getStatus() method.
        return $this->getData('is_lock');
    }

    /**
     * setStatus
     * @param integer $status
     * @return mixed
     */
    public function setIsLock($is_lock) {
        // TODO: Implement setStatus() method.
        return $this->setData('is_lock',$is_lock);
    }


    /**
     * getUpdatedAt
     * @return mixed
     */
    public function getUpdatedAt() {
        // TODO: Implement getUpdatedAt() method.
        return $this->getData('updated_at');
    }

    /**
     * setUpdatedAt
     * @param \DateTime $date
     * @return mixed
     */
    public function setUpdatedAt($date) {
        // TODO: Implement setUpdatedAt() method.
        return $this->setData('updated_at',$date->format('Y-m-d H:i:s'));
    }

    /**
     * getCreatedAt
     * @return mixed
     */
    public function getCreatedAt() {
        // TODO: Implement getCreatedAt() method.
        return $this->getData('created_at');
    }

    public function loadByConditions($param = []){

    }

    /**
     * beforeSave
     * @return $this
     */
    public function beforeSave() {
        if($this->getCreatedAt() == NULL)
            $this->setData('created_at',new \Datetime('now'));
        if($this->getUpdatedAt() == NULL)
            $this->setData('updated_at',new \Datetime('now'));
        return parent::beforeSave(); // TODO: Change the autogenerated stub
    }

    /**
     * className
     * @return string
     */
    public static function className(){
        return get_called_class();
    }

    /**
     * Load by customer id
     *
     * @param   string $customer_id
     * @return  $this
     */
    public function loadByCustomerId($customer_id)
    {
        $this->_getResource()->loadByCustomerId($this, $customer_id);
        return $this;
    }

    /**
     * Load by customer id
     *
     * @param   string $token
     * @param   int $isLock
     * @return  $this
     */
    public function loadByToken($token, $isLock=0)
    {
        $this->_getResource()->loadByToken($this, $token, $isLock);
        return $this;
    }
}
