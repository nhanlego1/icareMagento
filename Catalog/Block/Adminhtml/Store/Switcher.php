<?php
/**
 * Copyright Â© 2016 by Mobivi.
 * Created by Long Nguyen.
 * User: longnguyen
 * Date: 29/09/2016
 * Time: 15:27
 */

namespace Icare\Catalog\Block\Adminhtml\Store;


use Magento\Framework\App\ObjectManager;

class Switcher  extends \Magento\Backend\Block\Store\Switcher{

    /**
     * @var \Icare\Custom\Helper\ICareHelper $helper
     */
    private $helper;

    /**
     * @var \Magento\Backend\Model\Auth\Session $authSession
     */
    private $authSession;
    public function __construct(
        \Magento\Backend\Block\Template\Context $context,
        \Magento\Store\Model\WebsiteFactory $websiteFactory,
        \Magento\Store\Model\GroupFactory $storeGroupFactory,
        \Magento\Store\Model\StoreFactory $storeFactory,
        array $data = []

    ) {
        $this->helper = ObjectManager::getInstance()->get('\Icare\Custom\Helper\ICareHelper');
        $this->authSession = ObjectManager::getInstance()->get('\Magento\Backend\Model\Auth\Session');
        parent::__construct($context, $websiteFactory, $storeGroupFactory, $storeFactory, $data);
    }
    private function getCurrentStoreId(){
        $store_id = null;
        $user = $this->authSession->getUser();
        if($user){
            if (!$this->helper->checkSpecialUser($user) && !$this->_storeManager->isSingleStoreMode()) {
                $store_id = $user->getStoreId();
            }
        }
        return $store_id;
    }
    public function hasDefaultOption($hasDefaultOption = NULL) {
        $store_id = $this->getCurrentStoreId();
        if($store_id) return FALSE;
        return parent::hasDefaultOption($hasDefaultOption); // TODO: Change the autogenerated stub
    }

    public function getStores($group) {
        $store_id = $this->getCurrentStoreId();
        $stores=  parent::getStores($group); // TODO: Change the autogenerated stub
        if($store_id){
            foreach ($stores as $id => $store){
                if($id!=$store_id)
                    unset($stores[$id]);
            }
        }
        return $stores;
    }


}